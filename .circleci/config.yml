# vim: set expandtab sw=2:
# amolabs/amoabci CircleCI 2.0 configuration file
#
# << nodes to config >>
# - seed 
# - val1, val2, val3, val4, val5, val6
# (total 7 nodes)
#
# << peeer dependency >>
# - val1 <- seed
# - seed <- val2, val3, val4, val5, val6
#
# - executor: docker (amo-client image)
# - build (bootstrap)
#    - docker build image
#    - docker-compose create (without mounting volumes)
#    - docker copy config files from host to container
# - test
#    - run test_script
# - deploy
#
# DO NOT USE TABS FOR INDENTATION!!!
#
version: 2
jobs:
  amocli:
    docker:
      - image: circleci/golang:1.12
    working_directory: /go/src/github.com/amolabs/amoabci
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: "get amo-client-go from github repository"
          command: go get -u -d github.com/amolabs/amo-client-go/cmd/amocli
      - run:
          name: "prepare to build docker image"
          command: |
            cd /go/src/github.com/amolabs/amo-client-go
            make get_vendor_deps
            make test
            make TARGET=linux build
            cp -f amocli /go/src/github.com/amolabs/amoabci/.circleci/DOCKER_amocli/amocli
      - run:
          name: "build docker image"
          command: |
            cd /go/src/github.com/amolabs/amoabci/.circleci
            cp -f ../test_script/gen_key.sh ./DOCKER_amocli/gen_key.sh

            docker build -t amolabs/amocli-test DOCKER_amocli
      - run:
          name: "save docker image"
          command: docker save -o /tmp/amocli-test.tar amolabs/amocli-test
      - persist_to_workspace:
          root: /tmp
          paths:
            - amocli-test.tar

  build:
    docker:
      - image: circleci/golang:1.12
    working_directory: /go/src/github.com/amolabs/amoabci
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: "get vendor deps"
          command: make get_vendor_deps
      - run:
          name: "run unit test"
          command: make test
      - run: 
          name: "build docker image"
          command: make docker
      - run:
          name: "save docker image"
          command: docker save -o /tmp/amoabci-test.tar amolabs/amotest
      - persist_to_workspace:
          root: /tmp
          paths:
            - amoabci-test.tar
      
  test:
    docker:
      - image: alpine:3.7
    environment:
      NODENUM: 6
      AMO100: 100000000000000000000
    working_directory: /go/src/github.com/amolabs/amoabci
    steps:
      - checkout
      - run:
          name: "setup environments"
          command: |
            # install necessary things
            apk update
            apk add ca-certificates curl tar bash bc
            apk add py-pip python-dev libffi-dev openssl-dev gcc libc-dev make
            pip install --upgrade pip

            # install docker client
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
            
            # install docker-compose client
            pip install docker-compose
      - attach_workspace:
          at: /tmp
      - setup_remote_docker
      - run:
          name: "load and setup necessary configs"
          command: |
            # load pre-built docker images
            docker load -i /tmp/amoabci-test.tar
            docker load -i /tmp/amocli-test.tar

            cp -f .circleci/docker-compose.yml docker-compose.yml
      - run:
          name: "run amocli docker image"
          command: docker-compose up -d cli
      - run:
          name: "generate amocli test key set"
          command: ./test_script/gen_key.sh "$NODENUM"
      - run:
          name: "bootstrap genesis node"
          command: |
            ./test_script/run_genesis.sh

            val1ip=$(docker exec -it val1 ip -f inet a show dev eth0 | grep '\<inet\>' | head -1 | awk '{print $2}' | awk -F'/' '{print $1}')
            echo 'export OPT="--json --rpc=$val1ip:26657"' >> $BASH_ENV
      - run:
          name: "faucet to val1 owner: 100 AMO"
          command: ./test_script/distribute.sh 1 1 "$AMO100" "$OPT"
      - run:
          name: "stake for val1"
          command: ./test_script/stake.sh 1 1 "$AMO100" "$OPT"
      - run:
          name: "bootstrap seed node"
          command: ./test_script/run_seed.sh
      - run:
          name: "bootstrap validator nodes"
          command: ./test_script/run_validators.sh "$NODENUM"
      - run:
          name: "faucet to the validator owners: 100 AMO for each"
          command: ./test_script/distribute.sh 2 "$NODENUM" "$AMO100" "$OPT"
      - run:
          name: "stake for val2, val3, val4, val5, val6"
          command: ./test_script/stake.sh 2 "$NODENUM" "$AMO100" "$OPT"
      - run:
          name: "distribute coins"
          command: ./test_script/distribute.sh 1 "$NODENUM" "$AMO100" "$OPT"
      - run:
          name: "transfer coins"
          command: ./test_script/transfer.sh "$NODENUM" "$OPT"
      - run:
          name: "run parcel related transactions"
          command: ./test_script/parcel.sh "$OPT"
      - run:
          name: "withdraw stakes and retract delegates"
          command: ./test_script/withdraw.sh "$NODENUM" "$AMO100" "$OPT"
    
  deploy:
    docker:
      - image: alpine:3.7
    steps:
      - run:
          command: echo "finally got here !! Congrats :)"

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - amocli
      - build:
          requires:
            - amocli
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test

    

