# vim: set expandtab sw=2:
# amolabs/amoabci CircleCI 2.0 configuration file
#
# << nodes to config >>
# - seed 
# - val1, val2, val3, val4, val5, val6
# (total 7 nodes)
#
# << peeer dependency >>
# - val1 <- seed
# - seed <- val2, val3, val4, val5, val6
#
# - executor: docker (amo-client image)
# - build (bootstrap)
#    - docker build image
#    - docker-compose create (without mounting volumes)
#    - docker copy config files from host to container
# - test
#    - run test_script
# - deploy
#
# DO NOT USE TABS FOR INDENTATION!!!
#
version: 2
jobs:
  testcli:
    docker:
      - image: circleci/golang:1.12
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: "get amo-client-go from github repository"
          command: |
            cd ~
            git clone https://github.com/amolabs/amo-client-go
      - run:
          name: "prepare to build docker image"
          command: |
            cd ~/amo-client-go
            make test
            make TARGET=linux build
            cp -f amocli ~/project/.circleci/DOCKER_testcli/amocli
      - run:
          name: "build docker image"
          command: |
            cd ~/project/.circleci
            docker build -t amolabs/testcli DOCKER_testcli
      - run:
          name: "save docker image"
          command: docker save -o /tmp/testcli.tar amolabs/testcli
      - persist_to_workspace:
          root: /tmp
          paths:
            - testcli.tar

  build:
    docker:
      - image: circleci/golang:1.12
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: "run unit test"
          command: make test
      - run: 
          name: "build docker image"
          command: make docker
      - run:
          name: "save docker image"
          command: docker save -o /tmp/amod.tar amolabs/amod
      - persist_to_workspace:
          root: /tmp
          paths:
            - amod.tar
      
  test:
    docker:
      - image: circleci/golang:1.12
    environment:
      NODENUM: 6
      AMO100: 100000000000000000000
      CLI: docker exec -it testcli amocli
      CLIOPT: "--json --rpc=val1:26657"
      CURL: docker exec -it testcli curl
      CURLOPT: "val1:26657"
    steps:
      - checkout
      - attach_workspace:
          at: /tmp
      - setup_remote_docker
      - run:
          name: "load and setup necessary configs"
          command: |
            # load pre-built docker images
            docker load -i /tmp/amod.tar
            docker load -i /tmp/testcli.tar

            cp -f .circleci/docker-compose.yml docker-compose.yml

            sudo apt install bash bc
      - run:
          name: "run testcli docker image"
          command: docker-compose up -d testcli
      - run:
          name: "generate testcli test key set"
          command: ./test_script/gen_key.sh "$NODENUM"
      - run:
          name: "bootstrap genesis node"
          command: ./test_script/run_genesis.sh
      - run:
          name: "faucet to val1 owner: 100 AMO"
          command: ./test_script/distribute.sh 1 1 100000000000000000000
      - run:
          name: "stake for val1"
          command: ./test_script/stake.sh 1 1 100000000000000000000
      - run:
          name: "bootstrap seed node"
          command: ./test_script/run_seed.sh
      - run:
          name: "bootstrap validator nodes"
          command: ./test_script/run_validators.sh "$NODENUM"
      - run:
          name: "faucet to the validator owners: 100 AMO for each"
          command: ./test_script/distribute.sh 2 "$NODENUM" 100000000000000000000
      - run:
          name: "stake for val2, val3, val4, val5, val6"
          command: ./test_script/stake.sh 2 "$NODENUM" 100000000000000000000
      - run:
          name: "withdraw staked coins should FAIL"
          command: ./test_script/withdraw.sh 2 "$NODENUM" 100000000000000000000 "stake locked"
      - run:
          name: "distribute coins"
          command: ./test_script/distribute.sh 1 "$NODENUM" 100000000000000000000
      - run:
          name: "run parcel related transactions"
          command: ./test_script/parcel.sh
      - run:
          name: "retract delegated coins"
          command: ./test_script/retract.sh 1 "$NODENUM" 100000000000000000000
      - run:
          name: "withdraw stakes coins shoud SUCCEED"
          command: ./test_script/withdraw.sh 2 "$NODENUM" 100000000000000000000 "ok"
    
  deploy:
    docker:
      - image: circleci/golang:1.12
    steps:
      - attach_workspace:
          at: /tmp
      - setup_remote_docker
      - run:
          name: "load docker image"
          command: docker load -i /tmp/amod.tar
      - run:
          name: "publish docker image to docker hub"
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG=${CIRCLE_TAG/v/''}
            docker tag amolabs/amod:latest amolabs/amod:$IMAGE_TAG
            docker push amolabs/amod:latest
            docker push amolabs/amod:$IMAGE_TAG

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - testcli:
          filters:
            tags:
              only: /^v.*/
      - build:
          requires:
            - testcli
          filters:
            tags:
              only: /^v.*/
      - test:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
      - deploy:
          requires:
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
